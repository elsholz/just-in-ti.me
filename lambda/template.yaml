AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Lambda Function and API Gateway for just-in-ti.me.

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Mappings:
  EnvMap:
    prod:
      CertificateArn: "arn:aws:acm:eu-central-1:891666753558:certificate/1552d28f-f059-4af0-942e-c2b5022dc828"
      Domain: "api.just-in-ti.me"
      FunctionName: "JitFunctionProd"
      ApiName: "JitApiProd"
    dev:
      CertificateArn: "arn:aws:acm:eu-central-1:891666753558:certificate/dde08a63-1bf1-49fa-8e12-c55df088cce2"
      Domain: "api.dev.just-in-ti.me"
      FunctionName: "JitFunctionDev"
      ApiName: "JitApiDev"

Parameters:
  env:
    Type: String
    Description: Environment of the deployment (Lowercase)
  Domain:
    Type: String
    Description: Base Domain for API Gateway of the deployment
    Default: api.just-in-ti.me

Resources:
  JitFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !FindInMap [EnvMap, !Ref env, FunctionName]
      CodeUri: just_in_time/
      Handler: just_in_time.lambda_handler
      Runtime: python3.9
      Architectures:
        # - x86_64
        - arm64
      Policies:
        - Statement:
            - Sid: JITAccessSecretsManager
              Effect: Allow
              Action:
                - secretsmanager:GetResourcePolicy
                - secretsmanager:GetSecretValue
                - secretsmanager:DescribeSecret
                - secretsmanager:ListSecretVersionIds
              Resource: "arn:aws:secretsmanager:eu-central-1:891666753558:secret:JITKeys-jnrBoy"
      Events:
        GetUserdata:
          Type: HttpApi
          Properties:
            Path: /
            Method: get
            ApiId: !Ref JitApi
        PatchUserdata:
          Type: HttpApi
          Properties:
            Path: /
            Method: patch
            ApiId: !Ref JitApi
        DeleteUserdata:
          Type: HttpApi
          Properties:
            Path: /
            Method: delete
            ApiId: !Ref JitApi
      Tags:
        App: just-in-ti.me
        Environment: !Ref env
  JitApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref env
      Name: !FindInMap [EnvMap, !Ref env, ApiName]
      Domain:
        DomainName: !FindInMap [EnvMap, !Ref env, Domain]
        CertificateArn: !FindInMap [EnvMap, !Ref env, CertificateArn]
        Route53:
          HostedZoneId: "Z0300930209VNAOS1X0XR"
      Tags:
        App: just-in-ti.me
        Environment: !Ref env
Outputs:
  JitApiId:
    Description: Api ID of JitApi
    Value:
      Ref: JitApi
  JitFunction:
    Description: "JIT Function ARN"
    Value: !GetAtt JitFunction.Arn
  JitFunctionIamRole:
    Description: "Implicit IAM Role created for JIT function"
    Value: !GetAtt JitFunctionRole.Arn
